CREATE TABLE accounts
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email    VARCHAR(255)                            NOT NULL,
    password VARCHAR(255)                            NOT NULL,
    status   VARCHAR(255)                            NOT NULL,
    user_id  BIGINT,
    CONSTRAINT pk_accounts PRIMARY KEY (id)
);

CREATE TABLE certificates
(
    id                 UUID         NOT NULL,
    common_name        VARCHAR(255) NOT NULL,
    distinguished_name TEXT         NOT NULL,
    valid_from         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    valid_to           TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    status             VARCHAR(255) NOT NULL,
    type               VARCHAR(255) NOT NULL,
    issuer_id          UUID,
    owner_id           BIGINT       NOT NULL,
    organization_id    BIGINT       NOT NULL,
    alias              VARCHAR(255) NOT NULL,
    CONSTRAINT pk_certificates PRIMARY KEY (id)
);

CREATE TABLE organization
(
    id                             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name                           VARCHAR(255)                            NOT NULL,
    encrypted_key_store_password   VARCHAR(255),
    encrypted_private_key_password VARCHAR(255),
    ks_file_path                   VARCHAR(255),
    created_at                     TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_organization PRIMARY KEY (id)
);

CREATE TABLE refresh_tokens
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id     BIGINT                                  NOT NULL,
    token       VARCHAR(255)                            NOT NULL,
    issued_at   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    expiry_date TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_refresh_tokens PRIMARY KEY (id)
);

CREATE TABLE register_requests
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    verification_code VARCHAR(255)                            NOT NULL,
    expiration_time   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    email             VARCHAR(255)                            NOT NULL,
    password          VARCHAR(255)                            NOT NULL,
    user_id           BIGINT,
    CONSTRAINT pk_register_requests PRIMARY KEY (id)
);

CREATE TABLE users
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    first_name        VARCHAR(255)                            NOT NULL,
    last_name         VARCHAR(255)                            NOT NULL,
    organization_name VARCHAR(255)                            NOT NULL,
    role              SMALLINT                                NOT NULL,
    account_id        BIGINT,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

ALTER TABLE accounts
    ADD CONSTRAINT uc_accounts_email UNIQUE (email);

ALTER TABLE organization
    ADD CONSTRAINT uc_organization_name UNIQUE (name);

ALTER TABLE refresh_tokens
    ADD CONSTRAINT uc_refresh_tokens_token UNIQUE (token);

ALTER TABLE register_requests
    ADD CONSTRAINT uc_register_requests_verificationcode UNIQUE (verification_code);

ALTER TABLE users
    ADD CONSTRAINT uc_users_account UNIQUE (account_id);

ALTER TABLE accounts
    ADD CONSTRAINT FK_ACCOUNTS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE certificates
    ADD CONSTRAINT FK_CERTIFICATES_ON_ISSUER FOREIGN KEY (issuer_id) REFERENCES certificates (id);

ALTER TABLE certificates
    ADD CONSTRAINT FK_CERTIFICATES_ON_ORGANIZATION FOREIGN KEY (organization_id) REFERENCES organization (id);

ALTER TABLE certificates
    ADD CONSTRAINT FK_CERTIFICATES_ON_OWNER FOREIGN KEY (owner_id) REFERENCES users (id);

ALTER TABLE refresh_tokens
    ADD CONSTRAINT FK_REFRESH_TOKENS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE register_requests
    ADD CONSTRAINT FK_REGISTER_REQUESTS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE users
    ADD CONSTRAINT FK_USERS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES accounts (id);